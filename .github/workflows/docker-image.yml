name: Build and Push Docker Image to GHCR

on:
  workflow_dispatch:
    inputs:
      version:
        description: '镜像版本号 (Image Version)'
        required: false
        default: 'latest'
      environment:
        description: '部署环境 (Deployment Environment)'
        required: false
        default: 'production'
        type: choice
        options:
        - production
        - staging
        - development

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # 1. Add permissions for the GITHUB_TOKEN to write packages
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      # No changes needed here
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        
      # No changes needed here
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            image=moby/buildkit:master
            network=host
            
      # 2. Change Login action to use GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      # 3. Change the image name to the GHCR format
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ github.event.inputs.version || 'latest' }}
            type=raw,value=latest
            
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ github.workflow }}-${{ github.ref }}
          cache-to: type=gha,mode=max,scope=${{ github.workflow }}-${{ github.ref }}
          build-args: |
            ENVIRONMENT=${{ github.event.inputs.environment || 'production' }}
